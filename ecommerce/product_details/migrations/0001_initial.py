# Generated by Django 4.2.7 on 2023-11-26 14:15

import catalog.filters
import catalog.validators
from django.db import migrations, models
import orders.validators
import product_details.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DecorationDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('ORN', 'Ornaments'), ('CHR', 'Characters'), ('ANI', 'Animals'), ('SNW', 'Snowflakes'), ('OTR', 'Others')], max_length=3)),
                ('length_cm', product_details.models.DimensionField(decimal_places=2, max_digits=5, validators=[catalog.validators.positive_decimal_validator, catalog.validators.positive_decimal_validator])),
                ('width_cm', product_details.models.DimensionField(decimal_places=2, max_digits=5, validators=[catalog.validators.positive_decimal_validator, catalog.validators.positive_decimal_validator])),
                ('height_cm', product_details.models.DimensionField(decimal_places=2, max_digits=5, validators=[catalog.validators.positive_decimal_validator, catalog.validators.positive_decimal_validator])),
                ('material', models.CharField(max_length=256)),
                ('color', product_details.models.ColorField(max_length=64)),
            ],
            options={
                'abstract': False,
            },
            bases=(catalog.filters.FilterableMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FireworksDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shots', models.PositiveIntegerField()),
                ('duration_seconds', models.PositiveIntegerField(validators=[orders.validators.non_zero_validator])),
                ('main_effect', models.CharField(max_length=256)),
                ('number_of_effects', models.PositiveIntegerField(validators=[orders.validators.non_zero_validator])),
                ('color', product_details.models.ColorField(max_length=64)),
            ],
            options={
                'abstract': False,
            },
            bases=(catalog.filters.FilterableMixin, models.Model),
        ),
        migrations.CreateModel(
            name='GarlandDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('working_modes', models.PositiveIntegerField(default=1, validators=[orders.validators.non_zero_validator])),
                ('length_meters', product_details.models.DimensionField(decimal_places=2, max_digits=5, validators=[catalog.validators.positive_decimal_validator, catalog.validators.positive_decimal_validator])),
                ('bulb_form', models.CharField(max_length=64)),
                ('color', product_details.models.ColorField(max_length=64)),
            ],
            options={
                'abstract': False,
            },
            bases=(catalog.filters.FilterableMixin, models.Model),
        ),
        migrations.CreateModel(
            name='GiftWrapDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', product_details.models.ColorField(max_length=64)),
                ('density', models.CharField(max_length=64)),
                ('length_cm', product_details.models.DimensionField(decimal_places=2, max_digits=5, validators=[catalog.validators.positive_decimal_validator, catalog.validators.positive_decimal_validator])),
                ('width_cm', product_details.models.DimensionField(decimal_places=2, max_digits=5, validators=[catalog.validators.positive_decimal_validator, catalog.validators.positive_decimal_validator])),
                ('has_accent', models.BooleanField()),
                ('has_print', models.BooleanField()),
                ('is_monochrome', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
            bases=(catalog.filters.FilterableMixin, models.Model),
        ),
        migrations.CreateModel(
            name='IlluminationDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', product_details.models.ColorField(max_length=64)),
                ('form', models.CharField(max_length=64)),
                ('length_cm', product_details.models.DimensionField(decimal_places=2, max_digits=5, validators=[catalog.validators.positive_decimal_validator, catalog.validators.positive_decimal_validator])),
                ('width_cm', product_details.models.DimensionField(decimal_places=2, max_digits=5, validators=[catalog.validators.positive_decimal_validator, catalog.validators.positive_decimal_validator])),
                ('height_cm', product_details.models.DimensionField(decimal_places=2, max_digits=5, validators=[catalog.validators.positive_decimal_validator, catalog.validators.positive_decimal_validator])),
                ('is_candle', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
            bases=(catalog.filters.FilterableMixin, models.Model),
        ),
        migrations.CreateModel(
            name='WreathDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material', models.CharField(max_length=256)),
                ('length_cm', product_details.models.DimensionField(decimal_places=2, max_digits=5, validators=[catalog.validators.positive_decimal_validator, catalog.validators.positive_decimal_validator])),
                ('width_cm', product_details.models.DimensionField(decimal_places=2, max_digits=5, validators=[catalog.validators.positive_decimal_validator, catalog.validators.positive_decimal_validator])),
                ('color', product_details.models.ColorField(max_length=64)),
                ('has_illumination', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
            bases=(catalog.filters.FilterableMixin, models.Model),
        ),
    ]
